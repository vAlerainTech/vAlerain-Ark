;
;       This is a sample plugin configuration file.
;
;       Even if a plugin is not present in this file, IDA Pro
;       will find a use it automatically provided that the plugin
;       is in "plugins" subdirectory.
;
;       This file is needed to customize the plugins:
;             - appearance of the plugin in the menu
;             - the hotkey used to call the plugin
;             - the optional argument passed to the plugin
;
;       Format of this file is simple. Each line has the following
;       fields:
;
;       menu_name  filename  hotkey  arg  flags
;
;       menu_name - a visible name of the plugin.
;                     this name will be used in the Edit>Plugins menu.
;                     underscore symbols will be replaced by spaces here.
;       filename  - the plugin file name.
;                   if the filename is not an absolute file name,
;                   the the plugins directory will be prepended.
;                   if the extension is not specified, the default
;                   plugin extension will be used.
;                   The default extensions are:
;                           Windows:        .dll
;                           Linux:          .so
;                           Mac:            .dylib
;                   Note: plugins compiled for __EA64__ (i.e., support for
;                   64-bit address space), feature a '64' suffix before
;                   the extension. E.g. 'pdb64.dll'.
;       hotkey    - a hotkey to activate the plugin
;       arg       - an optional integer argument which will be passed to
;                   the run() function of the plugin
;       flags     - optional flags. One of the follow values:
;                   DEBUG: Debugger plugin
;                   WIN: Enable plugin for MS Windows
;                   MAC: Enable plugin for Mac
;                   LINUX: Enable plugin for Linux
;

;menu_name                     filename    hotkey  arg  flags
;------------------------------- ----------  ------  ---  --------

; Debugger plugins
; these plugins are used to populate the Debug, Run and Attach submenus

Local_Windows_debugger            win32_user    0       0  DEBUG
Local_Bochs_debugger              bochs_user    0       0  DEBUG
Local_Linux_debugger              linux_user    0       0  DEBUG
Local_Mac_OS_X_debugger           mac_user      0       0  DEBUG
Local_ARM_Mac_OS_debugger         arm_mac_user  0       0  DEBUG
Local_PIN_debugger                pin_user      0       0  DEBUG
Local_Replayer_debugger           replay_user   0       0  DEBUG

Remote_ARM_Linux/Android_debugger armlinux_stub 0       0  DEBUG ; only remote
Remote_GDB_debugger               gdb_user      0       0  DEBUG ; only remote
Remote_iOS_debugger               ios_user      0       0  DEBUG ; only remote
Remote_XNU_debugger               xnu_user      0       0  DEBUG ; only remote
Remote_ARM_Mac_OS_debugger        arm_mac_stub  0       0  DEBUG ; only remote
Remote_Mac_OS_X_debugger          mac_stub      0       0  DEBUG
Remote_Linux_debugger             linux_stub    0       0  DEBUG
Remote_Windows_debugger           win32_stub    0       0  DEBUG

Windbg_debugger                   windbg_user   0       0  DEBUG ; both local & remote

; if present, load Hex-Rays decompiler before all other plugins

Hex-Rays_Decompiler               hexrays        0       0  SILENT
Hex-Rays_Decompiler               hexx64         0       0  SILENT
Hex-Rays_Decompiler               hexarm         0       0  SILENT
Hex-Rays_Decompiler               hexarm64       0       0  SILENT
Hex-Rays_Decompiler               hexppc         0       0  SILENT
Hex-Rays_Decompiler               hexppc64       0       0  SILENT
Hex-Rays_Decompiler               hexmips64      0       0  SILENT

; Other plugins

Universal_Unpacker_Manual_Reconstruct uunp     0       2  WIN SILENT
Repeat_RTTI_command               bdescr        Alt-F5   6 SILENT ; repeat last command

;Borland_RTTI                     bdescr       Alt-F9    0
;Create_Any_RTT_                  bdescr       0         5
;Create_Pascal_RTTI               bdescr       0         4  ; Create pascal
;Create_Cpp_RTTI                  bdescr       0         3  ; Create C++
;List_RTTI_problems               bdescr       0         2  ; Problem list
;List_RTTI_descriptors            bdescr       0         1  ; List
